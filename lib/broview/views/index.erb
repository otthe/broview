<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Broview</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      display: flex;
      margin: 0;
      padding: 0;
    }
    .sidebar {
      width: 20%;
      height: 100vh;
      overflow-y: auto;
      background: #f4f4f4;
      border-right: 1px solid #ccc;
      padding: 10px;
    }
    .main-content {
      width: 80%;
      padding: 20px;
    }
    .media-link {
      display: block;
      margin: 10px 0;
      text-decoration: none;
      color: #333;
    }
    .media-link:hover {
      color: #007bff;
    }

    video, audio, img {
      width: 100%;
      max-height: 100%;
      object-fit: cover;
    }
    #view-container {
      width: 100%;
      max-width: 100%;
      height: 100%;
      max-height: 800px;
    }
    img {
      object-fit:cover;
    }

    video {
      position: absolute; 
      right: 0; 
      bottom: 0;
      min-width: 100%; 
      min-height: 100%;
      width: auto; 
      height: auto; 
      z-index: -100;
      background-size: cover;
      overflow: hidden;
    }

    .main-content #toolbar {
      width: 100%;
      height: 128px;
      background-color: rgba(0,0,0,0.5);
      position: fixed;
      bottom:0px;
      margin:0;
      margin-left: -20px;
      padding:0;

      display:flex;
      justify-content: center;
      align-items: center;
    }
  </style>
</head>
<body>
  <div class="sidebar">
    <h1>Broview</h1>
    <h3>Media Files</h3>
    <% @media_files.each do |file| %>
      <a 
        class="media-link" 
        href="/media/<%= file[:name] %>" 
        data-volume-adjustment="<%= file[:volume_adjustment] %>" 
        target="view-container">
        <%= file[:name] %>
      </a>
      <hr>
    <% end %>
  </div>
  <div class="main-content">
    <iframe id="view-container" style="border: none;" frameborder="0" allowfullscreen></iframe>
    <div id="toolbar">
      <button>previous</button>
      <button>next</button>
    </div>
  </div>

  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const links = document.querySelectorAll(".media-link");
      const iframe = document.getElementById("view-container");

      links.forEach(link => {
        link.addEventListener("click", (e) => {
          e.preventDefault();
          const filePath = link.getAttribute("href");
          const volumeAdjustment = parseFloat(link.dataset.volumeAdjustment);

          // Load the media file into the iframe
          iframe.src = filePath;

          // Adjust volume for audio or video inside the iframe
          iframe.onload = () => {
            const doc = iframe.contentDocument || iframe.contentWindow.document;
            const audioElement = doc.querySelector("audio");
            const videoElement = doc.querySelector("video");

            if (audioElement) {
              audioElement.volume = volumeAdjustment;
            }
            if (videoElement) {
              videoElement.volume = volumeAdjustment;
            }
          };
        });
      });
    });

    function fullBleed(containerWidth, containerHeight, mediaWidth, mediaHeight) {
      const ratio = mediaHeight / mediaWidth;

      let newWidth = containerWidth;
      let newHeight = containerWidth * ratio;

      if (newHeight < containerHeight) {
        newHeight = containerHeight;
        newWidth = containerHeight / ratio;
      }

      return {
        width: newWidth,
        height: newHeight,
      };
    }
    function scaleMediaElements() {
      const mediaElements = document.querySelectorAll('video, audio');
      
      mediaElements.forEach((media) => {
        const parent = media.parentElement;
        const containerWidth = parent.offsetWidth;
        const containerHeight = parent.offsetHeight;
        const mediaWidth = media.videoWidth || media.clientWidth;
        const mediaHeight = media.videoHeight || media.clientHeight;

        // Calculate new dimensions
        const newSize = fullBleed(containerWidth, containerHeight, mediaWidth, mediaHeight);

        // Apply new dimensions
        media.style.width = `${newSize.width}px`;
        media.style.height = `${newSize.height}px`;
        media.style.position = 'absolute'; // Optional, for centering
        media.style.left = `${(containerWidth - newSize.width) / 2}px`; // Center horizontally
        media.style.top = `${(containerHeight - newSize.height) / 2}px`; // Center vertically
      });
    }
    document.addEventListener('DOMContentLoaded', () => {
      scaleMediaElements();

      window.addEventListener('resize', () => {
        scaleMediaElements();
      });
    });
  </script>
</body>
</html>